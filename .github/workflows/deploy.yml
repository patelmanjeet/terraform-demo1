# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - "dev"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:

  terraform:
    name: Terraform int/uat
    runs-on: ubuntu-latest
    env:
      TERRAFORM_WORKSPACE: 'dev'
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

    steps:

      - name: List of the GitHub Actions environment variables on Windows
        run: env

      - uses: actions/checkout@v3

      - name: Set TERRAFORM_WORKSPACE to uat for main
        if: github.ref == 'refs/heads/main'
        run: echo "TERRAFORM_WORKSPACE=uat" >> $GITHUB_ENV

      - name: Debug
        run: |
          printenv

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Apply
        run: |
          terraform workspace select ${TERRAFORM_WORKSPACE }}
          terraform apply -var-file=${{ env.TERRAFORM_WORKSPACE }}.terraform.tfvars -auto-approve


  terraform-prod:
    runs-on: ubuntu-latest
    name: Terraform prod
    needs: terraform
    if: github.ref == 'refs/heads/main'
    steps:

      - uses: actions/checkout@v3

      - name: Terraform Init
        run: |
          terraform init

      - name: Terraform Apply
        run: |
          terraform workspace select prod
          #terraform apply -var-file=prod.terraform.tfvars -auto-approve
